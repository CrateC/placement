"""
Django settings for event_placement project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/


"""

import os

import sys
from kombu import Exchange, Queue

ALLOWED_HOSTS = [
                '127.0.0.1',
                'localhost',
                '103.250.83.254',
                '188.208.141.187'
                ]

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(
            os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


STATIC_ROOT = os.path.normpath(os.path.join(BASE_DIR, 'staticfiles'))
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_URL = '/static/'

MEDIA_ROOT = 'media'
MEDIA_URL = '/media/'

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i5d76re$0z49#v(6n!)ezqy4$zfg2v@+ubx0d2tjhasix(dvhl'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gunicorn',
    'events',
    'spiders',
    'django_mysql',

]
#INSTALLED_APPS += ['clever_cache']

# clever_cache
# CACHES = {
#     "default": {
#         "BACKEND": 'clever_cache.backend.RedisCache',
#         "LOCATION": 'redis://127.0.0.1:6379/3',
#         "OPTIONS": {
#             'DB': 3,
#         }
#     }
# }

# Memcached
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

DJANGO_MYSQL_REWRITE_QUERIES = True

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.core.context_processors.static",
    "django.core.context_processors.request",
)


MIDDLEWARE_CLASSES = (
    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'django.middleware.cache.UpdateCacheMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
)


ROOT_URLCONF = 'event_placement.urls'
LOGIN_URL = '/admin/login/'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                 os.path.join(BASE_DIR, 'spiders/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

WSGI_APPLICATION = 'event_placement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'event_placement',
        'USER': 'croot',
        'PASSWORD': 'YQAy4&NwYBS2',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '5432',
        'OPTIONS': {
            # Tell MySQLdb to connect with 'utf8mb4' character set
            'charset': 'utf8mb4',
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Kiev'

USE_I18N = True

USE_L10N = True

USE_TZ = False

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },

    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
                'level': 'DEBUG',
                'class': 'logging.StreamHandler',
            },
    },
    'loggers': {
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}


"""
CELERY
======

Celery application
definition http://docs.celeryproject.org/en/v4.0.2/userguide/configuration.html

"""

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/1'
#CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Europe/Kiev'


CELERY_IMPORTS = [
    'spiders.tasks',
    'events.tasks',
]



sys.path.insert(0, "../event_placement")

CELERY_TASK_QUEUES = (
    Queue('mainchain', Exchange('mainchain'), routing_key='mainchain'),
    Queue('todb', Exchange('todb'), routing_key='todb'),
    Queue('high', Exchange('high'), routing_key='high'),
    Queue('normal', Exchange('normal'), routing_key='normal'),
    Queue('page_load', Exchange('page_load'), routing_key='page_load'),
)


CELERY_DEFAULT_QUEUE = 'normal'
CELERY_DEFAULT_EXCHANGE = 'normal'
CELERY_DEFAULT_ROUTING_KEY = 'normal'


CELERY_ROUTES = {
    # -- HIGH PRIORITY QUEUE -- #

    'spiders.tasks.task_caribbean_parse': {'queue': 'high'},
    'spiders.tasks.task_parter_parse': {'queue': 'normal'},
    #'spiders.tasks.fb_chain': {'queue': 'mainchain'},
    'spiders.tasks.task_facebook_parse_fc': {'queue': 'normal'},
    'spiders.tasks.task_facebook_parse_fs': {'queue': 'normal'},
    'spiders.tasks.task_facebook_parse_fj': {'queue': 'normal'},
    'spiders.tasks.task_facebook_parse_fh': {'queue': 'normal'},
    'spiders.tasks.task_facebook_parse_all': {'queue': 'normal'},

    'spiders.tasks.task_parsed_to_db': {'queue': 'todb'},
    'events.tasks.get_query': {'queue': 'page_load'},

}


CELERY_SEND_TASK_SENT_EVENT = True
CELERYBEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'
CELERY_ENABLE_UTC = False
CELERY_MAX_TASKS_PER_CHILD=2



# The following lines may contains pseudo-code
from celery.schedules import crontab
# Other Celery settings
CELERY_BEAT_SCHEDULE = {

    'task-main_chain': {
        'task': 'spiders.tasks.main_chain',
        'schedule': 21600.0, # every 6 hours
        'options': {'queue': 'mainchain'},
        'args': ()
    },
}
